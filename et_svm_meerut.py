# -*- coding: utf-8 -*-
"""ET_SVM_Meerut.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ETiAVh_L_wB-DU7WkRKwB9W8392S0eI7
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVR
from sklearn.metrics import mean_squared_error

# Load your dataset
file_path = '/content/cropwatMeerut.xlsx - Sheet1.csv'
df = pd.read_csv(file_path)

# Assuming 'ETo (mm/day)' is the target variable
X = df.drop(columns=['ETo (mm/day)', 'Year', 'Month'])
y = df['ETo (mm/day)']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize features
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Create and train the SVM regression model
svm_model = SVR(kernel='rbf', C=1.0, epsilon=0.1)
svm_model.fit(X_train_scaled, y_train)

# Make predictions on the test set
predictions = svm_model.predict(X_test_scaled)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
print(f'SVM Regression MSE on the test set: {mse}')

import matplotlib.pyplot as plt

plt.scatter(y_test, predictions)
plt.xlabel('Actual ETo (mm/day)')
plt.ylabel('Predicted ETo (mm/day)')
plt.title('Actual vs. Predicted ETo')
plt.show()

